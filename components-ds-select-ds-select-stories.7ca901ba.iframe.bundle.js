/*! For license information please see components-ds-select-ds-select-stories.7ca901ba.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[995],{"./node_modules/lucide-react/dist/esm/icons/smile.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Smile});const Smile=(0,__webpack_require__("./node_modules/lucide-react/dist/esm/createLucideIcon.js").A)("smile",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 14s1.5 2 4 2 4-2 4-2",key:"1y1vjs"}],["line",{x1:"9",x2:"9.01",y1:"9",y2:"9",key:"yxxnd0"}],["line",{x1:"15",x2:"15.01",y1:"9",y2:"9",key:"1p4y9e"}]])},"./src/components/ds-select/ds-select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomOptions:()=>CustomOptions,Default:()=>Default,Disabled:()=>Disabled,MultiSelectGrouped:()=>MultiSelectGrouped,NativeSelect:()=>NativeSelect,SingleSelectGrouped:()=>SingleSelectGrouped,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),lucide_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/smile.js"),_ds_select__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/ds-select/ds-select.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:" Components/Select",component:_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,tags:["autodocs"],parameters:{layout:"padded",docs:{description:{component:"Help people choose single or multiple values from a set of options. Consider select when you have 5 or more options. As an alternative, radio buttons or checkboxes can make the interface cleaner and more accessible."}}},argTypes:{disabled:{name:"ðŸ”— disabled"},type:{name:"ðŸ”— type"},label:{name:"ðŸ”— label"},placeholder:{name:"ðŸ”— placeholder"},clearable:{name:"ðŸ”— clearable"},statusMsg:{control:"boolean",name:"ðŸ”— statusMsg",mapping:{false:void 0,true:{message:"This is the message of this status",type:"invalid"}}},fixedHeight:{name:"ðŸ”— fixedHeight"},value:{name:"ðŸ”— value",control:{disable:!0}},options:{name:"ðŸ”— options",control:{disable:!0}},className:{control:{disable:!0}},ariaLabel:{control:{disable:!0}}}},Default={render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value?.toString()),[multiValue,setMultiValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState([args.value?.toString()]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:"multi-value"===args.type?setMultiValue:setValue,value:"multi-value"===args.type?multiValue:value})},name:"Default",args:{type:"single-value",placeholder:"Select option",clearable:!0,value:"",options:[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"},{label:"Option 4",value:"4"},{label:"Option 5",value:"5"}]}},NativeSelect={render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value?.toString());return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:setValue,value})},argTypes:{type:{table:{disable:!0}},placeholder:{table:{disable:!0}}},args:{type:"native",value:"1",options:[{label:"Group",options:[{label:"Option 1",value:"1"}]},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"},{label:"Option 4",value:"4"},{label:"Option 5",value:"5"}]}},SingleSelectGrouped={render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value?.toString());return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:setValue,value})},argTypes:{type:{table:{disable:!0}}},args:{type:"single-value",placeholder:"Select an option",value:"1",options:[{label:"Group A",options:[{label:"Option 1",value:"1a"},{label:"Option 2",value:"2a"},{label:"Option 3",value:"3a"}]},{label:"Group B",options:[{label:"Option 1",value:"1b"},{label:"Option 2",value:"2b"},{label:"Option 3",value:"3b"}]}]}},MultiSelectGrouped={render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:setValue,value})},argTypes:{type:{table:{disable:!0}}},args:{type:"multi-value",placeholder:"Select option",value:["1"],options:[{label:"Group A",options:[{label:"Option 1",value:"1a"},{label:"Option 2",value:"2a"},{label:"Option 3",value:"3a"}]},{label:"Group B",options:[{label:"Option 1",value:"1b"},{label:"Option 2",value:"2b"},{label:"Option 3",value:"3b"}]},{label:"Option X",value:"X"},{label:"Option Y",value:"Y"}]}},Disabled={render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value?.toString()),[multiValue,setMultiValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState([args.value?.toString()]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:"multi-value"===args.type?setMultiValue:setValue,value:"multi-value"===args.type?multiValue:value})},argTypes:{disabled:{table:{disable:!0}}},args:{type:"native",value:"1",disabled:!0,options:[{label:"Option 1",value:"1"},{label:"Option 2",value:"2"},{label:"Option 3",value:"3"},{label:"Option 4",value:"4"},{label:"Option 5",value:"5"}]}},CustomOptions={parameters:{docs:{description:{story:"You can customize your options by passing in a `prefix` (on single select) or `suffix` (on single or multi select).\nYou can also use the `groupLabel` prop to group your options."}}},render:args=>{const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState(args.value?.toString()),[multiValue,setMultiValue]=react__WEBPACK_IMPORTED_MODULE_0__.useState([args.value?.toString()]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_ds_select__WEBPACK_IMPORTED_MODULE_2__.C,{...args,onChange:"multi-value"===args.type?setMultiValue:setValue,value:"multi-value"===args.type?multiValue:value})},argTypes:{options:{table:{disable:!0}}},args:{type:"single-value",value:"1",options:[{label:"Option 1",value:"1",prefix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16}),suffix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16})},{label:"Option 2",value:"2",prefix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16}),suffix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16})},{label:"Option 3",value:"3",prefix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16}),suffix:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(lucide_react__WEBPACK_IMPORTED_MODULE_1__.A,{size:16})}]}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value?.toString());\n    const [multiValue, setMultiValue] = React.useState<any>([args.value?.toString()]);\n    return <DsSelect {...args} onChange={args.type === 'multi-value' ? setMultiValue : setValue} value={args.type === 'multi-value' ? multiValue : value} />;\n  },\n  name: 'Default',\n  args: {\n    type: 'single-value',\n    placeholder: 'Select option',\n    clearable: true,\n    value: '',\n    options: [{\n      label: 'Option 1',\n      value: '1'\n    }, {\n      label: 'Option 2',\n      value: '2'\n    }, {\n      label: 'Option 3',\n      value: '3'\n    }, {\n      label: 'Option 4',\n      value: '4'\n    }, {\n      label: 'Option 5',\n      value: '5'\n    }]\n  }\n}",...Default.parameters?.docs?.source}}},NativeSelect.parameters={...NativeSelect.parameters,docs:{...NativeSelect.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value?.toString());\n    return <DsSelect {...args} onChange={setValue} value={value} />;\n  },\n  argTypes: {\n    type: {\n      table: {\n        disable: true\n      }\n    },\n    placeholder: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    type: 'native',\n    value: '1',\n    options: [{\n      label: 'Group',\n      options: [{\n        label: 'Option 1',\n        value: '1'\n      }]\n    }, {\n      label: 'Option 2',\n      value: '2'\n    }, {\n      label: 'Option 3',\n      value: '3'\n    }, {\n      label: 'Option 4',\n      value: '4'\n    }, {\n      label: 'Option 5',\n      value: '5'\n    }]\n  }\n}",...NativeSelect.parameters?.docs?.source}}},SingleSelectGrouped.parameters={...SingleSelectGrouped.parameters,docs:{...SingleSelectGrouped.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value?.toString());\n    return <DsSelect {...args} onChange={setValue} value={value} />;\n  },\n  argTypes: {\n    type: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    type: 'single-value',\n    placeholder: 'Select an option',\n    value: '1',\n    options: [{\n      label: 'Group A',\n      options: [{\n        label: 'Option 1',\n        value: '1a'\n      }, {\n        label: 'Option 2',\n        value: '2a'\n      }, {\n        label: 'Option 3',\n        value: '3a'\n      }]\n    }, {\n      label: 'Group B',\n      options: [{\n        label: 'Option 1',\n        value: '1b'\n      }, {\n        label: 'Option 2',\n        value: '2b'\n      }, {\n        label: 'Option 3',\n        value: '3b'\n      }]\n    }]\n  }\n}",...SingleSelectGrouped.parameters?.docs?.source}}},MultiSelectGrouped.parameters={...MultiSelectGrouped.parameters,docs:{...MultiSelectGrouped.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value);\n    return <DsSelect {...args} onChange={setValue} value={value} />;\n  },\n  argTypes: {\n    type: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    type: 'multi-value',\n    placeholder: 'Select option',\n    value: ['1'],\n    options: [{\n      label: 'Group A',\n      options: [{\n        label: 'Option 1',\n        value: '1a'\n      }, {\n        label: 'Option 2',\n        value: '2a'\n      }, {\n        label: 'Option 3',\n        value: '3a'\n      }]\n    }, {\n      label: 'Group B',\n      options: [{\n        label: 'Option 1',\n        value: '1b'\n      }, {\n        label: 'Option 2',\n        value: '2b'\n      }, {\n        label: 'Option 3',\n        value: '3b'\n      }]\n    }, {\n      label: 'Option X',\n      value: 'X'\n    }, {\n      label: 'Option Y',\n      value: 'Y'\n    }]\n  }\n}",...MultiSelectGrouped.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value?.toString());\n    const [multiValue, setMultiValue] = React.useState<any>([args.value?.toString()]);\n    return <DsSelect {...args} onChange={args.type === 'multi-value' ? setMultiValue : setValue} value={args.type === 'multi-value' ? multiValue : value} />;\n  },\n  argTypes: {\n    disabled: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    type: 'native',\n    value: '1',\n    disabled: true,\n    options: [{\n      label: 'Option 1',\n      value: '1'\n    }, {\n      label: 'Option 2',\n      value: '2'\n    }, {\n      label: 'Option 3',\n      value: '3'\n    }, {\n      label: 'Option 4',\n      value: '4'\n    }, {\n      label: 'Option 5',\n      value: '5'\n    }]\n  }\n}",...Disabled.parameters?.docs?.source}}},CustomOptions.parameters={...CustomOptions.parameters,docs:{...CustomOptions.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'You can customize your options by passing in a `prefix` (on single select) or `suffix` (on single or multi select).\\nYou can also use the `groupLabel` prop to group your options.'\n      }\n    }\n  },\n  render: args => {\n    const [value, setValue] = React.useState<any>(args.value?.toString());\n    const [multiValue, setMultiValue] = React.useState<any>([args.value?.toString()]);\n    return <DsSelect {...args} onChange={args.type === 'multi-value' ? setMultiValue : setValue} value={args.type === 'multi-value' ? multiValue : value} />;\n  },\n  argTypes: {\n    options: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    type: 'single-value',\n    value: '1',\n    options: [{\n      label: 'Option 1',\n      value: '1',\n      prefix: <Smile size={16} />,\n      suffix: <Smile size={16} />\n    }, {\n      label: 'Option 2',\n      value: '2',\n      prefix: <Smile size={16} />,\n      suffix: <Smile size={16} />\n    }, {\n      label: 'Option 3',\n      value: '3',\n      prefix: <Smile size={16} />,\n      suffix: <Smile size={16} />\n    }]\n  }\n}",...CustomOptions.parameters?.docs?.source}}};const __namedExportsOrder=["Default","NativeSelect","SingleSelectGrouped","MultiSelectGrouped","Disabled","CustomOptions"];try{DsSelect.displayName="DsSelect",DsSelect.__docgenInfo={description:"",displayName:"DsSelect",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"native"'},{value:'"single-value"'},{value:'"multi-value"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | string[]"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"(Option | OptionGroup)[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"((value: string) => void) | ((value?: string | undefined) => void) | ((value: string[]) => void)"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},statusMsg:{defaultValue:null,description:"",name:"statusMsg",required:!1,type:{name:"DsStatusMessageProps"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},clearable:{defaultValue:null,description:"",name:"clearable",required:!1,type:{name:"boolean"}},fixedHeight:{defaultValue:{value:"true"},description:"",name:"fixedHeight",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ds-select/ds-select.stories.tsx#DsSelect"]={docgenInfo:DsSelect.__docgenInfo,name:"DsSelect",path:"src/components/ds-select/ds-select.stories.tsx#DsSelect"})}catch(__react_docgen_typescript_loader_error){}}}]);