/*! For license information please see components-ds-checkbox-ds-checkbox-stories.bbd3832b.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkdesign_system=self.webpackChunkdesign_system||[]).push([[519],{"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./src/components/ds-checkbox/ds-checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Accessibility:()=>Accessibility,Default:()=>Default,Disabled:()=>Disabled,Indeterminate:()=>Indeterminate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/ds-checkbox/ds-checkbox.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:" Components/Checkbox",component:_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,tags:["autodocs"],parameters:{layout:"padded",docs:{description:{component:"Checkboxes allow people to select multiple options or toggle a single choice. For single selections, consider radio buttons or drop-downs. Note that checkboxes require a submission step, while switches offer real-time interaction."}}},argTypes:{checked:{name:"ðŸ”— checked"},indeterminate:{name:"ðŸ”— indeterminate"},disabled:{name:"ðŸ”— disabled"},checkLabel:{name:"ðŸ”— checkLabel"},className:{control:{disable:!0}},ariaLabel:{control:{disable:!0}}}},Default={render:args=>{const[checked,setChecked]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!!args.checked);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{setChecked(!!args.checked)},[args.checked]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checked,onToggle:setChecked})},args:{checkLabel:"Label"},name:"Default"},Disabled={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{display:"flex",gap:"var(--ds-space-md)"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checked:!0,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,indeterminate:!0,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checkLabel:"Label",disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checkLabel:"Label",checked:!0,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checkLabel:"Label",indeterminate:!0,disabled:!0})]}),args:{},name:"Disabled Checkbox",argTypes:{disabled:{table:{disable:!0}},checked:{table:{disable:!0}},indeterminate:{table:{disable:!0}}}},Indeterminate={render:args=>{const[checked1,setChecked1]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!0),[checked2,setChecked2]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checked:checked1&&checked2,indeterminate:checked1||checked2,onToggle:()=>{checked1&&checked2?(setChecked1(!1),setChecked2(!1)):(setChecked1(!0),setChecked2(!0))}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{marginLeft:"var(--ds-space-xxlg)",display:"flex",flexDirection:"column",gap:"var(--ds-space-md)"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checked:checked1,onToggle:setChecked1}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{...args,checked:checked2,onToggle:setChecked2})]})]})},args:{},name:"Indeterminate",argTypes:{disabled:{table:{disable:!0}},checked:{table:{disable:!0}},indeterminate:{table:{disable:!0}}}},Accessibility={render:args=>{const[agreement,setAgreement]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1),[notifications,setNotifications]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!0),[option1,setOption1]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!0),[option2,setOption2]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{display:"flex",gap:"var(--ds-space-xxlg)",flexDirection:"column"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{display:"flex",gap:"var(--ds-space-lg)",flexDirection:"column"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h4",{children:"Standard Checkboxes"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"I agree to the terms and conditions",checked:agreement,onToggle:setAgreement}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"Enable email notifications",checked:notifications,onToggle:setNotifications}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"Disabled checkbox",disabled:!0,checked:!1,onToggle:()=>{}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{display:"flex",gap:"var(--ds-space-lg)",flexDirection:"column"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h4",{children:"Indeterminate (Select All) Pattern"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"Select all options",checked:option1&&option2,indeterminate:(option1||option2)&&!(option1&&option2),onToggle:()=>{option1&&option2?(setOption1(!1),setOption2(!1)):(setOption1(!0),setOption2(!0))}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:{marginLeft:"var(--ds-space-lg)"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"Option 1",checked:option1,onToggle:setOption1}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_ds_checkbox__WEBPACK_IMPORTED_MODULE_1__.X,{checkLabel:"Option 2",checked:option2,onToggle:setOption2})]})]})]})},name:"Accessibility",parameters:{docs:{description:{story:'\n## Accessibility Features\n\nThis component follows WCAG 2.1 AA guidelines and implements the checkbox pattern correctly:\n\n### WCAG Compliance\n- **2.1.1 Keyboard**: Fully keyboard accessible via Tab and Space keys\n- **2.4.6 Headings and Labels**: Clear labeling via `checkLabel` or `ariaLabel` props\n- **3.3.2 Labels or Instructions**: Labels clearly identify the purpose of each checkbox\n- **4.1.2 Name, Role, Value**: Proper `role="checkbox"` with accessible name and state\n\n### ARIA Attributes\n- `role="checkbox"` - Identifies the element as a checkbox\n- `aria-checked` - Indicates checked state (true/false/mixed for indeterminate)\n- `aria-disabled` - Indicates disabled state to screen readers\n- `aria-label` - For checkboxes without visible labels\n- `aria-labelledby` - Associates checkbox with its label\n- `aria-describedby` - Links to additional descriptive text\n- `aria-hidden="true"` - Hides decorative icons from screen readers\n\n### Keyboard Navigation\n- **Tab**: Focus navigation between checkboxes\n- **Space**: Toggle checkbox state\n- **Enter**: Also toggles checkbox (alternative to Space)\n\n### States\n- **Checked**: `aria-checked="true"`\n- **Unchecked**: `aria-checked="false"`\n- **Indeterminate**: `aria-checked="mixed"` (for "select all" patterns)\n- **Disabled**: `aria-disabled="true"` and `tabindex="-1"`\n\n### Implementation\n```tsx\n// Standard checkbox with label\n<DsCheckbox \n  checkLabel="Enable notifications" \n  checked={isEnabled} \n  onToggle={setIsEnabled} \n/>\n\n// Checkbox without visible label (requires ariaLabel)\n<DsCheckbox \n  ariaLabel="Accept privacy policy" \n  checked={acceptedPolicy} \n  onToggle={setAcceptedPolicy} \n/>\n\n// Indeterminate checkbox for "select all" pattern\n<DsCheckbox \n  checkLabel="Select all items" \n  checked={allSelected} \n  indeterminate={someSelected}\n  onToggle={handleSelectAll} \n/>\n\n// Disabled checkbox\n<DsCheckbox \n  checkLabel="Premium feature (requires upgrade)" \n  disabled={true}\n  checked={false} \n  onToggle={() => {}} \n/>\n```\n\n### Best Practices\n- Always provide a `checkLabel` or `ariaLabel` for screen readers\n- Use indeterminate state for "select all" functionality when some but not all items are selected\n- Group related checkboxes using fieldset and legend elements in your forms\n- Provide clear, descriptive labels that explain what will happen when checked\n        '}}},argTypes:{checkLabel:{table:{disable:!0}},checked:{table:{disable:!0}},indeterminate:{table:{disable:!0}},disabled:{table:{disable:!0}},ariaLabel:{table:{disable:!0}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [checked, setChecked] = React.useState<boolean>(!!args.checked);\n    React.useEffect(() => {\n      setChecked(!!args.checked);\n    }, [args.checked]);\n    return <DsCheckbox {...args} checked={checked} onToggle={setChecked} />;\n  },\n  args: {\n    checkLabel: 'Label'\n  },\n  name: 'Default'\n}",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return <div style={{\n      display: 'flex',\n      gap: 'var(--ds-space-md)'\n    }}>\n        <DsCheckbox {...args} disabled />\n        <DsCheckbox {...args} checked disabled />\n        <DsCheckbox {...args} indeterminate disabled />\n        <DsCheckbox {...args} checkLabel='Label' disabled />\n        <DsCheckbox {...args} checkLabel='Label' checked disabled />\n        <DsCheckbox {...args} checkLabel='Label' indeterminate disabled />\n      </div>;\n  },\n  args: {},\n  name: 'Disabled Checkbox',\n  argTypes: {\n    disabled: {\n      table: {\n        disable: true\n      }\n    },\n    checked: {\n      table: {\n        disable: true\n      }\n    },\n    indeterminate: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}},Indeterminate.parameters={...Indeterminate.parameters,docs:{...Indeterminate.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [checked1, setChecked1] = React.useState<boolean>(true);\n    const [checked2, setChecked2] = React.useState<boolean>(false);\n    const onToggleMaster = () => {\n      if (checked1 && checked2) {\n        setChecked1(false);\n        setChecked2(false);\n      } else {\n        setChecked1(true);\n        setChecked2(true);\n      }\n    };\n    return <>\n        <DsCheckbox {...args} checked={checked1 && checked2} indeterminate={checked1 || checked2} onToggle={onToggleMaster} />\n        <div style={{\n        marginLeft: 'var(--ds-space-xxlg)',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 'var(--ds-space-md)'\n      }}>\n          <DsCheckbox {...args} checked={checked1} onToggle={setChecked1} />\n          <DsCheckbox {...args} checked={checked2} onToggle={setChecked2} />\n        </div>\n      </>;\n  },\n  args: {},\n  name: 'Indeterminate',\n  argTypes: {\n    disabled: {\n      table: {\n        disable: true\n      }\n    },\n    checked: {\n      table: {\n        disable: true\n      }\n    },\n    indeterminate: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}",...Indeterminate.parameters?.docs?.source}}},Accessibility.parameters={...Accessibility.parameters,docs:{...Accessibility.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [agreement, setAgreement] = React.useState<boolean>(false);\n    const [notifications, setNotifications] = React.useState<boolean>(true);\n    const [option1, setOption1] = React.useState<boolean>(true);\n    const [option2, setOption2] = React.useState<boolean>(false);\n    const selectAllToggle = () => {\n      if (option1 && option2) {\n        setOption1(false);\n        setOption2(false);\n      } else {\n        setOption1(true);\n        setOption2(true);\n      }\n    };\n    return <div style={{\n      display: \'flex\',\n      gap: \'var(--ds-space-xxlg)\',\n      flexDirection: \'column\'\n    }}>\n        <div style={{\n        display: \'flex\',\n        gap: \'var(--ds-space-lg)\',\n        flexDirection: \'column\'\n      }}>\n          <h4>Standard Checkboxes</h4>\n          <DsCheckbox checkLabel="I agree to the terms and conditions" checked={agreement} onToggle={setAgreement} />\n          <DsCheckbox checkLabel="Enable email notifications" checked={notifications} onToggle={setNotifications} />\n          <DsCheckbox checkLabel="Disabled checkbox" disabled={true} checked={false} onToggle={() => {}} />\n        </div>\n        \n        <div style={{\n        display: \'flex\',\n        gap: \'var(--ds-space-lg)\',\n        flexDirection: \'column\'\n      }}>\n          <h4>Indeterminate (Select All) Pattern</h4>\n          <DsCheckbox checkLabel="Select all options" checked={option1 && option2} indeterminate={(option1 || option2) && !(option1 && option2)} onToggle={selectAllToggle} />\n          <div style={{\n          marginLeft: \'var(--ds-space-lg)\'\n        }}>\n            <DsCheckbox checkLabel="Option 1" checked={option1} onToggle={setOption1} />\n            <DsCheckbox checkLabel="Option 2" checked={option2} onToggle={setOption2} />\n          </div>\n        </div>\n      </div>;\n  },\n  name: \'Accessibility\',\n  parameters: {\n    docs: {\n      description: {\n        story: `\n## Accessibility Features\n\nThis component follows WCAG 2.1 AA guidelines and implements the checkbox pattern correctly:\n\n### WCAG Compliance\n- **2.1.1 Keyboard**: Fully keyboard accessible via Tab and Space keys\n- **2.4.6 Headings and Labels**: Clear labeling via \\`checkLabel\\` or \\`ariaLabel\\` props\n- **3.3.2 Labels or Instructions**: Labels clearly identify the purpose of each checkbox\n- **4.1.2 Name, Role, Value**: Proper \\`role="checkbox"\\` with accessible name and state\n\n### ARIA Attributes\n- \\`role="checkbox"\\` - Identifies the element as a checkbox\n- \\`aria-checked\\` - Indicates checked state (true/false/mixed for indeterminate)\n- \\`aria-disabled\\` - Indicates disabled state to screen readers\n- \\`aria-label\\` - For checkboxes without visible labels\n- \\`aria-labelledby\\` - Associates checkbox with its label\n- \\`aria-describedby\\` - Links to additional descriptive text\n- \\`aria-hidden="true"\\` - Hides decorative icons from screen readers\n\n### Keyboard Navigation\n- **Tab**: Focus navigation between checkboxes\n- **Space**: Toggle checkbox state\n- **Enter**: Also toggles checkbox (alternative to Space)\n\n### States\n- **Checked**: \\`aria-checked="true"\\`\n- **Unchecked**: \\`aria-checked="false"\\`\n- **Indeterminate**: \\`aria-checked="mixed"\\` (for "select all" patterns)\n- **Disabled**: \\`aria-disabled="true"\\` and \\`tabindex="-1"\\`\n\n### Implementation\n\\`\\`\\`tsx\n// Standard checkbox with label\n<DsCheckbox \n  checkLabel="Enable notifications" \n  checked={isEnabled} \n  onToggle={setIsEnabled} \n/>\n\n// Checkbox without visible label (requires ariaLabel)\n<DsCheckbox \n  ariaLabel="Accept privacy policy" \n  checked={acceptedPolicy} \n  onToggle={setAcceptedPolicy} \n/>\n\n// Indeterminate checkbox for "select all" pattern\n<DsCheckbox \n  checkLabel="Select all items" \n  checked={allSelected} \n  indeterminate={someSelected}\n  onToggle={handleSelectAll} \n/>\n\n// Disabled checkbox\n<DsCheckbox \n  checkLabel="Premium feature (requires upgrade)" \n  disabled={true}\n  checked={false} \n  onToggle={() => {}} \n/>\n\\`\\`\\`\n\n### Best Practices\n- Always provide a \\`checkLabel\\` or \\`ariaLabel\\` for screen readers\n- Use indeterminate state for "select all" functionality when some but not all items are selected\n- Group related checkboxes using fieldset and legend elements in your forms\n- Provide clear, descriptive labels that explain what will happen when checked\n        `\n      }\n    }\n  },\n  argTypes: {\n    checkLabel: {\n      table: {\n        disable: true\n      }\n    },\n    checked: {\n      table: {\n        disable: true\n      }\n    },\n    indeterminate: {\n      table: {\n        disable: true\n      }\n    },\n    disabled: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabel: {\n      table: {\n        disable: true\n      }\n    }\n  }\n}',...Accessibility.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Disabled","Indeterminate","Accessibility"];try{DsCheckbox.displayName="DsCheckbox",DsCheckbox.__docgenInfo={description:"",displayName:"DsCheckbox",props:{checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"",name:"indeterminate",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"",name:"onToggle",required:!0,type:{name:"(isChecked: boolean) => void"}},checkLabel:{defaultValue:null,description:"",name:"checkLabel",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},ariaDescribedBy:{defaultValue:null,description:"",name:"ariaDescribedBy",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ds-checkbox/ds-checkbox.stories.tsx#DsCheckbox"]={docgenInfo:DsCheckbox.__docgenInfo,name:"DsCheckbox",path:"src/components/ds-checkbox/ds-checkbox.stories.tsx#DsCheckbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/ds-checkbox/ds-checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{X:()=>DsCheckbox});var react=__webpack_require__("./node_modules/react/index.js"),prefix=__webpack_require__("./src/components/prefix.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function DsIconCheck12X12(){return(0,jsx_runtime.jsx)("svg",{className:`${prefix.P}-icon-check-12x12`,xmlns:"http://www.w3.org/2000/svg",width:"12",height:"12",viewBox:"0 0 12 12",fill:"currentcolor",children:(0,jsx_runtime.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M10.7702 3.64021C11.1238 3.21593 11.0664 2.58537 10.6422 2.2318C10.2179 1.87824 9.58732 1.93556 9.23376 2.35984L4.87394 7.59162L2.64216 5.7318C2.21789 5.37824 1.58732 5.43556 1.23376 5.85984C0.880193 6.28412 0.937517 6.91468 1.36179 7.26825L4.36179 9.76825C4.78607 10.1218 5.41664 10.0645 5.7702 9.64021L10.7702 3.64021Z"})})}DsIconCheck12X12.displayName="DsIconCheck12X12";var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);function DsIconIndeterminateLine2X10(){return(0,jsx_runtime.jsx)("svg",{className:`${prefix.P}-icon-indeterminate-line-2x10`,width:"18",height:"18",viewBox:"0 0 18 18",xmlns:"http://www.w3.org/2000/svg",children:(0,jsx_runtime.jsx)("path",{d:"M4 9C4 8.44772 4.44772 8 5 8H13C13.5523 8 14 8.44772 14 9C14 9.55228 13.5523 10 13 10H5C4.44772 10 4 9.55228 4 9Z",fill:"currentcolor"})})}DsIconIndeterminateLine2X10.displayName="DsIconIndeterminateLine2X10";const compPrefix=`${prefix.P}-checkbox`,DsCheckbox=props=>{const checkboxId=react.useMemo(()=>props.id||`${compPrefix}-${Math.random().toString(36).substring(7)}`,[props.id]),labelId=react.useMemo(()=>`${checkboxId}-label`,[checkboxId]),classNames=classnames_default()(`${compPrefix}-wrapper`,props.disabled?`${prefix.P}-disabled`:`${prefix.P}-interactable`,props.className,props.checked||props.indeterminate?"checked":""),handleToggle=()=>{props.disabled||props.onToggle(!props.checked)};return(0,jsx_runtime.jsxs)("div",{className:classNames,onClick:e=>{e.preventDefault(),e.stopPropagation(),handleToggle()},children:[(0,jsx_runtime.jsx)("div",{id:checkboxId,role:"checkbox",className:compPrefix,tabIndex:props.disabled?-1:0,onKeyDown:e=>{" "!==e.key&&"Enter"!==e.key||(e.preventDefault(),handleToggle())},"aria-checked":props.indeterminate?"mixed":props.checked||!1,"aria-disabled":props.disabled,"aria-label":props.ariaLabel,"aria-describedby":props.ariaDescribedBy||(props.checkLabel?labelId:void 0),"aria-labelledby":props.checkLabel&&!props.ariaLabel?labelId:void 0,children:props.checked?(0,jsx_runtime.jsx)(DsIconCheck12X12,{"aria-hidden":"true"}):props.indeterminate?(0,jsx_runtime.jsx)(DsIconIndeterminateLine2X10,{"aria-hidden":"true"}):null}),props.checkLabel&&(0,jsx_runtime.jsx)("label",{id:labelId,htmlFor:checkboxId,className:`${compPrefix}-label`,children:props.checkLabel})]})};DsCheckbox.displayName="DsCheckbox";const dsCheckbox=null;try{DsCheckbox.displayName="DsCheckbox",DsCheckbox.__docgenInfo={description:"",displayName:"DsCheckbox",props:{checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"",name:"indeterminate",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"",name:"onToggle",required:!0,type:{name:"(isChecked: boolean) => void"}},checkLabel:{defaultValue:null,description:"",name:"checkLabel",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},ariaDescribedBy:{defaultValue:null,description:"",name:"ariaDescribedBy",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ds-checkbox/ds-checkbox.tsx#DsCheckbox"]={docgenInfo:DsCheckbox.__docgenInfo,name:"DsCheckbox",path:"src/components/ds-checkbox/ds-checkbox.tsx#DsCheckbox"})}catch(__react_docgen_typescript_loader_error){}try{dsCheckbox.displayName="dsCheckbox",dsCheckbox.__docgenInfo={description:"",displayName:"dsCheckbox",props:{checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:"",name:"indeterminate",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"",name:"onToggle",required:!0,type:{name:"(isChecked: boolean) => void"}},checkLabel:{defaultValue:null,description:"",name:"checkLabel",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},ariaDescribedBy:{defaultValue:null,description:"",name:"ariaDescribedBy",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ds-checkbox/ds-checkbox.tsx#dsCheckbox"]={docgenInfo:dsCheckbox.__docgenInfo,name:"dsCheckbox",path:"src/components/ds-checkbox/ds-checkbox.tsx#dsCheckbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/prefix.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{P:()=>prefix});const prefix="ds"}}]);